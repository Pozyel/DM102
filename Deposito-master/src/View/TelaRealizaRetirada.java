/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.EPC;
import Controller.EPI;
import Controller.Ferramenta;
import Controller.Funcionario;
import Model.EPCDAO;
import Model.EPIDAO;
import Model.FerramentaDAO;
import Model.FuncionarioDAO;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author antun
 */
public class TelaRealizaRetirada extends javax.swing.JFrame {

    /**
     * Creates new form TelaRealizaRetirada
     */
    public TelaRealizaRetirada() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BotaoVoltarCadastroFuncionario = new javax.swing.JButton();
        RegistroDoFuncionarioParaRetirada = new javax.swing.JTextField();
        NomeDoFuncionarioParaRetirada = new javax.swing.JLabel();
        BotaoCompletaFuncionario = new javax.swing.JButton();
        NumeroDeSerieItem = new javax.swing.JTextField();
        ItemParaRetirada = new javax.swing.JComboBox<>();
        NomeDeSerieItem = new javax.swing.JLabel();
        BotaoCompletaFuncionario1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuCadastrar = new javax.swing.JMenu();
        MenuCadastrarFuncionario = new javax.swing.JMenuItem();
        MenuCadastrarFerramenta = new javax.swing.JMenuItem();
        MenuCadastrarEPI = new javax.swing.JMenuItem();
        MenuCadastrarEPC = new javax.swing.JMenuItem();
        MenuListar = new javax.swing.JMenu();
        MenuListarFuncionario = new javax.swing.JMenuItem();
        MenuListarFerramenta = new javax.swing.JMenuItem();
        MenuListarEPI = new javax.swing.JMenuItem();
        MenuListarEPC = new javax.swing.JMenuItem();
        MenuAtualizar = new javax.swing.JMenu();
        MenuAtualizarFuncionario = new javax.swing.JMenuItem();
        MenuAtualizarFerramenta = new javax.swing.JMenuItem();
        MenuAtualizarEPI = new javax.swing.JMenuItem();
        MenuAtualizarEPC = new javax.swing.JMenuItem();
        MenuDeletar = new javax.swing.JMenu();
        MenuDeletarFuncionario = new javax.swing.JMenuItem();
        MenuDeletarFerramenta = new javax.swing.JMenuItem();
        MenuDeletarEPI = new javax.swing.JMenuItem();
        MenuDeletarEPC = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BotaoVoltarCadastroFuncionario.setText("Voltar");
        BotaoVoltarCadastroFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoVoltarCadastroFuncionarioActionPerformed(evt);
            }
        });

        RegistroDoFuncionarioParaRetirada.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro do Funcionario"));

        NomeDoFuncionarioParaRetirada.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome"));

        BotaoCompletaFuncionario.setText("Completar Dados do Funcionario");
        BotaoCompletaFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCompletaFuncionarioActionPerformed(evt);
            }
        });

        NumeroDeSerieItem.setBorder(javax.swing.BorderFactory.createTitledBorder("Numero de Serie"));
        NumeroDeSerieItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumeroDeSerieItemActionPerformed(evt);
            }
        });

        ItemParaRetirada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o tipo do Item", "Ferramenta", "EPI", "EPC" }));
        ItemParaRetirada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemParaRetiradaActionPerformed(evt);
            }
        });

        NomeDeSerieItem.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome do Item"));

        BotaoCompletaFuncionario1.setText("Completar Dados do Item");
        BotaoCompletaFuncionario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCompletaFuncionario1ActionPerformed(evt);
            }
        });

        jButton1.setText("Verificar Disponibilidade");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Realizar Retirada");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegistroDoFuncionarioParaRetirada)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(NomeDoFuncionarioParaRetirada, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(NumeroDeSerieItem, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(NomeDeSerieItem, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BotaoCompletaFuncionario1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ItemParaRetirada, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BotaoCompletaFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BotaoVoltarCadastroFuncionario, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RegistroDoFuncionarioParaRetirada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NomeDoFuncionarioParaRetirada, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoCompletaFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ItemParaRetirada, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumeroDeSerieItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NomeDeSerieItem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotaoCompletaFuncionario1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(BotaoVoltarCadastroFuncionario)
                .addContainerGap())
        );

        MenuCadastrar.setText("Cadastrar");

        MenuCadastrarFuncionario.setText("Funcionario");
        MenuCadastrarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCadastrarFuncionarioActionPerformed(evt);
            }
        });
        MenuCadastrar.add(MenuCadastrarFuncionario);

        MenuCadastrarFerramenta.setText("Ferramenta");
        MenuCadastrarFerramenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCadastrarFerramentaActionPerformed(evt);
            }
        });
        MenuCadastrar.add(MenuCadastrarFerramenta);

        MenuCadastrarEPI.setText("EPI");
        MenuCadastrarEPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCadastrarEPIActionPerformed(evt);
            }
        });
        MenuCadastrar.add(MenuCadastrarEPI);

        MenuCadastrarEPC.setText("EPC");
        MenuCadastrarEPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCadastrarEPCActionPerformed(evt);
            }
        });
        MenuCadastrar.add(MenuCadastrarEPC);

        jMenuBar1.add(MenuCadastrar);

        MenuListar.setText("Listar");

        MenuListarFuncionario.setText("Funcionario");
        MenuListarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuListarFuncionarioActionPerformed(evt);
            }
        });
        MenuListar.add(MenuListarFuncionario);

        MenuListarFerramenta.setText("Ferramenta");
        MenuListarFerramenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuListarFerramentaActionPerformed(evt);
            }
        });
        MenuListar.add(MenuListarFerramenta);

        MenuListarEPI.setText("EPI");
        MenuListarEPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuListarEPIActionPerformed(evt);
            }
        });
        MenuListar.add(MenuListarEPI);

        MenuListarEPC.setText("EPC");
        MenuListarEPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuListarEPCActionPerformed(evt);
            }
        });
        MenuListar.add(MenuListarEPC);

        jMenuBar1.add(MenuListar);

        MenuAtualizar.setText("Atualizar");

        MenuAtualizarFuncionario.setText("Funcionario");
        MenuAtualizarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAtualizarFuncionarioActionPerformed(evt);
            }
        });
        MenuAtualizar.add(MenuAtualizarFuncionario);

        MenuAtualizarFerramenta.setText("Ferramenta");
        MenuAtualizarFerramenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAtualizarFerramentaActionPerformed(evt);
            }
        });
        MenuAtualizar.add(MenuAtualizarFerramenta);

        MenuAtualizarEPI.setText("EPI");
        MenuAtualizarEPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAtualizarEPIActionPerformed(evt);
            }
        });
        MenuAtualizar.add(MenuAtualizarEPI);

        MenuAtualizarEPC.setText("EPC");
        MenuAtualizarEPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAtualizarEPCActionPerformed(evt);
            }
        });
        MenuAtualizar.add(MenuAtualizarEPC);

        jMenuBar1.add(MenuAtualizar);

        MenuDeletar.setText("Deletar");

        MenuDeletarFuncionario.setText("Funcionario");
        MenuDeletarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuDeletarFuncionarioActionPerformed(evt);
            }
        });
        MenuDeletar.add(MenuDeletarFuncionario);

        MenuDeletarFerramenta.setText("Ferramenta");
        MenuDeletarFerramenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuDeletarFerramentaActionPerformed(evt);
            }
        });
        MenuDeletar.add(MenuDeletarFerramenta);

        MenuDeletarEPI.setText("EPI");
        MenuDeletarEPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuDeletarEPIActionPerformed(evt);
            }
        });
        MenuDeletar.add(MenuDeletarEPI);

        MenuDeletarEPC.setText("EPC");
        MenuDeletarEPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuDeletarEPCActionPerformed(evt);
            }
        });
        MenuDeletar.add(MenuDeletarEPC);

        jMenuBar1.add(MenuDeletar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuCadastrarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCadastrarFuncionarioActionPerformed
        TelaCadastroFuncionario t = new TelaCadastroFuncionario();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuCadastrarFuncionarioActionPerformed

    private void MenuCadastrarFerramentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCadastrarFerramentaActionPerformed
        TelaCadastroFerramenta t = new TelaCadastroFerramenta();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuCadastrarFerramentaActionPerformed

    private void MenuCadastrarEPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCadastrarEPIActionPerformed
        TelaCadastroEPI t = new TelaCadastroEPI();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuCadastrarEPIActionPerformed

    private void MenuCadastrarEPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCadastrarEPCActionPerformed
        TelaCadastroEPC t = new TelaCadastroEPC();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuCadastrarEPCActionPerformed

    private void MenuListarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuListarFuncionarioActionPerformed
        TelaListarFuncionario t = new TelaListarFuncionario();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuListarFuncionarioActionPerformed

    private void MenuListarFerramentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuListarFerramentaActionPerformed
        TelaListarFerramenta t = new TelaListarFerramenta();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuListarFerramentaActionPerformed

    private void MenuListarEPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuListarEPIActionPerformed
        TelaListarEPI t = new TelaListarEPI();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuListarEPIActionPerformed

    private void MenuListarEPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuListarEPCActionPerformed
        TelaListarEPC t = new TelaListarEPC();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuListarEPCActionPerformed

    private void MenuAtualizarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAtualizarFuncionarioActionPerformed
        TelaAtualizarFuncionario t = new TelaAtualizarFuncionario();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuAtualizarFuncionarioActionPerformed

    private void MenuAtualizarFerramentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAtualizarFerramentaActionPerformed
        TelaAtualizarFerramenta t = new TelaAtualizarFerramenta();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuAtualizarFerramentaActionPerformed

    private void MenuAtualizarEPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAtualizarEPIActionPerformed
        TelaAtualizarEPI t = new TelaAtualizarEPI();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuAtualizarEPIActionPerformed

    private void MenuAtualizarEPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAtualizarEPCActionPerformed
        TelaAtualizarEPC t = new TelaAtualizarEPC();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuAtualizarEPCActionPerformed

    private void MenuDeletarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuDeletarFuncionarioActionPerformed
        TelaDeletarFuncionario t = new TelaDeletarFuncionario();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuDeletarFuncionarioActionPerformed

    private void MenuDeletarFerramentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuDeletarFerramentaActionPerformed
        TelaDeletarFerramenta t = new TelaDeletarFerramenta();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuDeletarFerramentaActionPerformed

    private void MenuDeletarEPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuDeletarEPIActionPerformed
        TelaDeletarEPI t = new TelaDeletarEPI();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuDeletarEPIActionPerformed

    private void MenuDeletarEPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuDeletarEPCActionPerformed
        TelaDeletarEPC t = new TelaDeletarEPC();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuDeletarEPCActionPerformed

    private void BotaoVoltarCadastroFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoVoltarCadastroFuncionarioActionPerformed
        TelaInicial t = new TelaInicial();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BotaoVoltarCadastroFuncionarioActionPerformed

    private void BotaoCompletaFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCompletaFuncionarioActionPerformed
        FuncionarioDAO funcionariodao = new FuncionarioDAO();
        ArrayList<Funcionario> listaDeFuncionarios = new ArrayList<>();
        listaDeFuncionarios = funcionariodao.buscarFuncionarioSemFiltro();
        for (int i = 0; i < listaDeFuncionarios.size(); i++) {
            if (listaDeFuncionarios.get(i).getRegistro() == (Integer.parseInt(RegistroDoFuncionarioParaRetirada.getText()))) {
                NomeDoFuncionarioParaRetirada.setText(listaDeFuncionarios.get(i).getNome());
            } else {
                System.out.println("Funcionario não encontrado");
            }
        }
    }//GEN-LAST:event_BotaoCompletaFuncionarioActionPerformed

    private void NumeroDeSerieItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumeroDeSerieItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumeroDeSerieItemActionPerformed

    private void ItemParaRetiradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemParaRetiradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemParaRetiradaActionPerformed

    private void BotaoCompletaFuncionario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCompletaFuncionario1ActionPerformed

        switch (ItemParaRetirada.getSelectedIndex()) {
            case 0:
                JOptionPane.showMessageDialog(null, "Por favor, escolha o tipo do item", "Atenção", HEIGHT);
                break;
            case 1:
//                Tipo do item: Ferramenta
                FerramentaDAO ferramentadao = new FerramentaDAO();
                ArrayList<Ferramenta> listaDeFerramenta = new ArrayList<>();
                listaDeFerramenta = ferramentadao.buscarFerramentaSemFiltro();
                for (int i = 0; i < listaDeFerramenta.size(); i++) {
                    if (listaDeFerramenta.get(i).getNumero_Serie() == (Integer.parseInt(NumeroDeSerieItem.getText()))) {
                        NomeDeSerieItem.setText(listaDeFerramenta.get(i).getNome());
                    } else {
                        System.out.println("Ferramenta não encontrado");
                    }
                }

                break;
            case 2:
//                Tipo do item: EPI
                EPIDAO epidao = new EPIDAO();
                ArrayList<EPI> listaDeEPI = new ArrayList<>();
                listaDeEPI = epidao.buscarEPISemFiltro();
                for (int i = 0; i < listaDeEPI.size(); i++) {
                    if (listaDeEPI.get(i).getIdEPI() == (Integer.parseInt(NumeroDeSerieItem.getText()))) {
                        NomeDeSerieItem.setText(listaDeEPI.get(i).getNome());
                    } else {
                        System.out.println("EPI não encontrado");
                    }
                }

                break;
            case 3:
//                Tipo do item: EPC
                EPCDAO epcdao = new EPCDAO();
                ArrayList<EPC> listaDeEPC = new ArrayList<>();
                listaDeEPC = epcdao.buscarEPCSemFiltro();
                for (int i = 0; i < listaDeEPC.size(); i++) {
                    if (listaDeEPC.get(i).getIdEPC() == (Integer.parseInt(NumeroDeSerieItem.getText()))) {
                        NomeDeSerieItem.setText(listaDeEPC.get(i).getNome());
                    } else {
                        System.out.println("EPC não encontrado");
                    }
                }

                break;
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_BotaoCompletaFuncionario1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (ItemParaRetirada.getSelectedIndex() == 1) {
            FerramentaDAO ferramentadao = new FerramentaDAO();
            ArrayList<Ferramenta> listaDeFerramenta = new ArrayList<>();
            listaDeFerramenta = ferramentadao.buscarFerramentaSemFiltro();
            for (int i = 0; i < listaDeFerramenta.size(); i++) {
                if (listaDeFerramenta.get(i).getNumero_Serie() == (Integer.parseInt(NumeroDeSerieItem.getText()))) {
                    if (listaDeFerramenta.get(i).getQuantidade() > 0) {
                        JOptionPane.showMessageDialog(null, "Esta Ferramenta Está Disponivel", "Disponibilidade", HEIGHT);
                    } else {
                        JOptionPane.showMessageDialog(null, "Esta Ferramenta Não Está Disponivel", "Disponibilidade", HEIGHT);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Dados Não Encontrados", "Atenção", HEIGHT);
                }
            }
        } else if (ItemParaRetirada.getSelectedIndex() != 0) {
            JOptionPane.showMessageDialog(null, "EPI e EPC Sempre Está Disponivel", "Disponibilidade", HEIGHT);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, escolha o tipo do item", "Atenção", HEIGHT);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        FuncionarioDAO funcionariodao = new FuncionarioDAO();
        ArrayList<Funcionario> listaDeFuncionarios = new ArrayList<>();
        listaDeFuncionarios = funcionariodao.buscarFuncionarioSemFiltro();
        for (int t = 0; t < listaDeFuncionarios.size(); t++) {
            if (listaDeFuncionarios.get(t).getRegistro() == (Integer.parseInt(RegistroDoFuncionarioParaRetirada.getText()))) {

                switch (ItemParaRetirada.getSelectedIndex()) {
                    case 0:
                        JOptionPane.showMessageDialog(null, "Por favor, escolha o tipo do item", "Atenção", HEIGHT);
                        break;
                    case 1:
//                Tipo do item: Ferramenta
                        FerramentaDAO ferramentadao = new FerramentaDAO();
                        ArrayList<Ferramenta> listaDeFerramenta = new ArrayList<>();
                        listaDeFerramenta = ferramentadao.buscarFerramentaSemFiltro();
                        for (int i = 0; i < listaDeFerramenta.size(); i++) {
                            if (listaDeFerramenta.get(i).getNumero_Serie() == (Integer.parseInt(NumeroDeSerieItem.getText()))) {
                                if (listaDeFerramenta.get(i).getQuantidade() > 0) {

                                    ferramentadao.atualizarDadosFerramentaComUsuario(
                                            listaDeFerramenta.get(i).getNumero_Serie(),
                                            (listaDeFerramenta.get(i).getQuantidade() - 1),
                                            listaDeFuncionarios.get(t).getRegistro());

                                    JOptionPane.showMessageDialog(null, "Retirada Realizada", "Atenção", HEIGHT);

                                } else {
                                    JOptionPane.showMessageDialog(null, "Esta Ferramenta Não Está Disponivel", "Disponibilidade", HEIGHT);
                                }
                            } else {
                                System.out.println("Ferramenta não encontrado");
                            }
                        }
                        break;
                    case 2:
//                Tipo do item: EPI
                        EPIDAO epidao = new EPIDAO();
                        ArrayList<EPI> listaDeEPI = new ArrayList<>();
                        listaDeEPI = epidao.buscarEPISemFiltro();
                        for (int i = 0; i < listaDeEPI.size(); i++) {
                            if (listaDeEPI.get(i).getIdEPI() == (Integer.parseInt(NumeroDeSerieItem.getText()))) {

                                funcionariodao.atualizarDadosFuncionarioComEPI(
                                        listaDeFuncionarios.get(i).getRegistro(),
                                        listaDeEPI.get(i).getIdEPI());

                                java.util.Date d = new java.util.Date();
                                java.sql.Date Data_Retirado = new java.sql.Date(d.getTime());

                                epidao.atualizarDataRetirada(listaDeEPI.get(i).getIdEPI(), (java.sql.Date) Data_Retirado);
                                JOptionPane.showMessageDialog(null, "Retirada Realizada", "Atenção", HEIGHT);
                            } else {
                                System.out.println("EPI não encontrado");
                            }
                        }
                        break;
                    case 3:
//                Tipo do item: EPC
                        EPCDAO epcdao = new EPCDAO();
                        ArrayList<EPC> listaDeEPC = new ArrayList<>();
                        listaDeEPC = epcdao.buscarEPCSemFiltro();
                        for (int i = 0; i < listaDeEPC.size(); i++) {
                            if (listaDeEPC.get(i).getIdEPC() == (Integer.parseInt(NumeroDeSerieItem.getText()))) {
                                java.util.Date d = new java.util.Date();
                                java.sql.Date Data_retirado = new java.sql.Date(d.getTime());

                                epcdao.atualizarDadosEPCRetirada(listaDeEPC.get(i).getIdEPC(),
                                        listaDeFuncionarios.get(i).getRegistro(), (java.sql.Date) Data_retirado);
                                JOptionPane.showMessageDialog(null, "Retirada Realizada", "Atenção", HEIGHT);
                            } else {
                                System.out.println("EPC não encontrado");
                            }
                        }
                        break;
                    default:
                        throw new AssertionError();
                }

            } else {
                System.out.println("Funcionario não encontrado");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRealizaRetirada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRealizaRetirada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRealizaRetirada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRealizaRetirada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRealizaRetirada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoCompletaFuncionario;
    private javax.swing.JButton BotaoCompletaFuncionario1;
    private javax.swing.JButton BotaoVoltarCadastroFuncionario;
    private javax.swing.JComboBox<String> ItemParaRetirada;
    private javax.swing.JMenu MenuAtualizar;
    private javax.swing.JMenuItem MenuAtualizarEPC;
    private javax.swing.JMenuItem MenuAtualizarEPI;
    private javax.swing.JMenuItem MenuAtualizarFerramenta;
    private javax.swing.JMenuItem MenuAtualizarFuncionario;
    private javax.swing.JMenu MenuCadastrar;
    private javax.swing.JMenuItem MenuCadastrarEPC;
    private javax.swing.JMenuItem MenuCadastrarEPI;
    private javax.swing.JMenuItem MenuCadastrarFerramenta;
    private javax.swing.JMenuItem MenuCadastrarFuncionario;
    private javax.swing.JMenu MenuDeletar;
    private javax.swing.JMenuItem MenuDeletarEPC;
    private javax.swing.JMenuItem MenuDeletarEPI;
    private javax.swing.JMenuItem MenuDeletarFerramenta;
    private javax.swing.JMenuItem MenuDeletarFuncionario;
    private javax.swing.JMenu MenuListar;
    private javax.swing.JMenuItem MenuListarEPC;
    private javax.swing.JMenuItem MenuListarEPI;
    private javax.swing.JMenuItem MenuListarFerramenta;
    private javax.swing.JMenuItem MenuListarFuncionario;
    private javax.swing.JLabel NomeDeSerieItem;
    private javax.swing.JLabel NomeDoFuncionarioParaRetirada;
    private javax.swing.JTextField NumeroDeSerieItem;
    private javax.swing.JTextField RegistroDoFuncionarioParaRetirada;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
